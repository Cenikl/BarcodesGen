openapi: 3.0.3
info:
  version: 'latest'
  title: BarcodesGen - API
  description: |
    A simple API that creates 1D and 2D barcodes using user inputs
security:
  - BearerAuth: []
paths:
  '/health':
    get:
      tags:
        - Health
      summary: Health check of the server
      description: Check if the server is up or not
      operationId: healthCheck
      responses:
        '200':
          description: The server is up
          content:
            text/plain:
              schema:
                type: string
                example: Hello world with a surprise
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

  '/barcodeGen':
    post:
      tags:
        - Barcodes
      summary: Create barcodes depending on the request
      operationId: postBarcodes
      requestBody:
        description: A json which specify the information needed to create a barcode
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CodeContent'
      responses:
        '200':
          description: return an 1D/2D barcode
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'

components:
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'
  schemas:
    CodeContent:
      properties:
        content:
          type: string
          example: "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
        codeType:
          type: string
          enum:
            - EAN13
            - EAN8
            - QRCODE
            - UPCA
            - UPCE
            - CODABAR
            - CODE39
            - CODE93
            - CODE128
            - ITF
            - PDF417
          example: QRCODE
        width:
          type: integer
          example: 300
        height:
          type: integer
          example: 150
    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error